{"version":3,"sources":["components/Graphic.js","components/Error.js","components/Text.js","components/Form.js","components/Header.js","App.js","helpers.js","reportWebVitals.js","index.js"],"names":["am4core","am4themes_animated","Graphic","props","chart","useRef","useLayoutEffect","x","am4charts","contentWidth","paddingRight","zoomOutButton","background","fill","states","create","properties","data","a","dataQuery","prices","i","length","push","date","name","value","ordered","sort","b","Date","xAxes","renderer","grid","template","location","valueAxis","yAxes","tooltip","disabled","minWidth","series","stroke","strokeWidth","dataFields","dateX","valueY","tooltipText","getFillFromObject","label","cursor","bullet","bullets","circle","radius","tapToActivate","tapTimeout","legend","legendSettings","labelText","criptoCoinTitle","targetCurrencyTitle","scrollbarX","current","dispose","className","type","onClick","e","window","scrollTo","preventDefault","storeDataQuery","document","getElementsByClassName","classList","remove","id","style","width","height","Error","Text","class","Form","criptoCoin","storeCriptoCoin","targetCurrency","storeTargetCurrency","days","storeDays","storeMakingChart","makingChart","criptoCoinOptions","targetCurrencyOptions","formError","storeCriptoCoinTitle","storeTargetCurrencyTitle","storeFormError","errorMessage","storeErrorMessage","criptoCoinMenu","regexFirstNumber","coinSymbol","test","targetCurrencyMenu","referenceCurrency","rates","useEffect","setTimeout","onSubmit","add","onChange","target","onBlur","Header","App","component","komponentt","useState","storeCriptoCoinOptions","storeTargetCurrencyOptions","title","url","fetch","makeAPIQuery","then","res","json","criptoName","targetCoin","filter","item","dataObject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b72eb0b3.chunk.js","sourcesContent":["import React, { useRef, useLayoutEffect } from 'react';\nimport '../App.css';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\n\nfunction Graphic(props) {\n  const chart = useRef(null);\n\n  useLayoutEffect(() => {\n    let x = am4core.create(\"chartdiv\", am4charts.XYChart);\n\n    x.contentWidth = 750\n\n    x.paddingRight = 20;\n    x.zoomOutButton.background.fill = am4core.color(\"#00ff00\");\n    let hover = x.zoomOutButton.background.states.create(\"hover\");\n    hover.properties.fill = am4core.color(\"#00aa00\");\n\n    let data = [];\n    let a = props.dataQuery.prices;\n\n    for (let i = 0; i < a.length; i++) {\n      data.push({ date: a[i][0], name: \"name\" + i, value: a[i][1] });\n    }\n\n    x.data = data;\n    let ordered = x.data.sort((a,b)=>{return (new Date(a.date)) - (new Date(b.date));});\n    x.data = ordered;\n\n    let dateAxis = x.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.grid.template.location = 0;\n\n    let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    valueAxis.renderer.minWidth = 35;\n\n    let series = x.series.push(new am4charts.LineSeries());\n    series.stroke = am4core.color(\"#3a8d3a\");\n    series.strokeWidth = 4;\n    series.dataFields.dateX = \"date\";\n    series.dataFields.valueY = \"value\";\n    series.tooltipText = \"{valueY.value}\";\n    series.tooltip.getFillFromObject = false;\n    series.tooltip.background.fill = am4core.color(\"#9d9\");\n    series.tooltip.label.fill = am4core.color(\"#fff\");\n    x.cursor = new am4charts.XYCursor();\n    let bullet = series.bullets.push(new am4charts.CircleBullet());\n    bullet.circle.fill = am4core.color(\"#3a8d3a\");\n    bullet.circle.radius = 4;\n    x.tapToActivate = true;\n    x.tapTimeout = 1000;\n\n    x.legend = new am4charts.Legend();\n    series.legendSettings.labelText = `${props.criptoCoinTitle}'s value (expressed in ${props.targetCurrencyTitle}).`;\n\n    let scrollbarX = new am4charts.XYChartScrollbar();\n    scrollbarX.series.push(series);\n    x.scrollbarX = scrollbarX;\n\n    \n\n    chart.current = x;\n\n    return () => {\n      x.dispose();\n    };\n  }, []);\n\n  function buttonHandler(e){\n    window.scrollTo(0,500);\n    e.preventDefault(); \n    props.storeDataQuery(null);\n    document.getElementsByClassName(\"container-fluid\")[0].classList.remove(\"media-width\");\n  }\n\n  return (\n    <div className=\"chart\">\n    <button type=\"button\" onClick={buttonHandler} className=\"btn btn-success\">Back to Home</button>\n    <h2 className=\"text-center\"><span className=\"chart-title\"><span className=\"chart-title-detail\">{`${props.criptoCoinTitle}'s`}</span>{` value expressed in `} <span className=\"chart-title-detail\">{`${props.targetCurrencyTitle}`}</span>{` for the specified period`}</span></h2>\n    <div className=\"chart-help\">\n    <p className=\"bold\">To zoom into a segment of the line:<br/><br/></p>\n\n    <p><span className=\"underlined\">If you’re using a mobile phone: </span>\n      <ol>\n        <li>Tap the screen.</li>\n        <li>Press the screen and drag your finger, from the beggining to the end of the section of the line you want to zoom into.</li>\n        <li>Lift your finger from the screen.</li>\n      </ol>\n    </p>\n\n    <p><span className=\"underlined\">If your using a desktop or laptop:</span>\n      <ol>\n        <li>Click and hold the mouse button at the beggining of the segment you want to zoom into.</li>\n        <li>Drag the cursor untill the end of the segment.</li>\n        <li>Release the mouse button.</li>\n      </ol>\n    </p>\n    <p>If you want to zoom out back, tap the button with the minus sign at the top right corner of the chart.</p>\n\n\n\n\n    </div>\n    <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>\n    </div>\n  );\n}\nexport default Graphic;\n","import React from \"react\";\n\nconst Error = ()=>{\n    return(\n        <div className=\"d-flex text-center error align-items-center justify-content-center\">\n            <div>Not enough data to render chart.<br/>\n            Please try a different cryptocoin or time span.\n            </div>\n        </div>\n    );\n}\n\nexport default Error;","import React, {Fragment} from \"react\";\n\nconst Text = ()=>{\n    return(\n        <Fragment>\n            <div className=\"jumbotron d-flex flex-column align-items-center text\">\n                <p class=\"underlined\">How to do it</p>\n                <div>\n                    <ul>\n                        <li className=\"bullet-cash\"><span>In the first drop down menu, set your <span className=\"bold\">cryptocurrency</span>. </span></li>\n                        <li className=\"bullet-graph\"><span>In the second, set the currency you want <span className=\"bold\">the cryptocurrency's value</span> to be expressed in.</span></li>\n                        <li className=\"bullet-calendar\"><span>Set how many <span className=\"bold\">days of the cryptocurrency’s performance</span> you would like to see.</span></li>\n                        <li className=\"bullet-click\"><span>Click on <span className=\"bold\">“Create Chart”</span>.</span></li>\n                    </ul>\n                </div>         \n            </div>\n        </Fragment>\n    );\n}\n\nexport default Text;","import React, {useEffect} from \"react\";\n\nfunction Form(props){\n    const {criptoCoin,storeCriptoCoin,targetCurrency,storeTargetCurrency,days,storeDays,\n        makingChart,storeMakingChart,criptoCoinOptions,targetCurrencyOptions,\n        criptoCoinTitle,storeCriptoCoinTitle,targetCurrencyTitle,\n        storeTargetCurrencyTitle, formError, storeFormError, errorMessage, \n        storeErrorMessage} = props;\n\n    let criptoCoinMenu = [<option value=\"\">Select Criptocoin</option>];\n    let regexFirstNumber = /^[0-9]/;\n    if(criptoCoinOptions!==null){\n        for(const coinSymbol in criptoCoinOptions){\n            if(!regexFirstNumber.test(coinSymbol)){\n                criptoCoinMenu.push(<option value={criptoCoinOptions[coinSymbol]}>{coinSymbol}</option>);\n            }\n        }\n        for(const coinSymbol in criptoCoinOptions){\n            if(regexFirstNumber.test(coinSymbol)){\n                criptoCoinMenu.push(<option value={criptoCoinOptions[coinSymbol]}>{coinSymbol}</option>);\n            }\n        }\n    }\n    \n    let targetCurrencyMenu = [<option value=\"\">Select Target Currency</option>];\n\n    if(targetCurrencyOptions!==null){\n        for (const referenceCurrency in targetCurrencyOptions.rates){\n            targetCurrencyMenu.push(<option value={referenceCurrency}>{targetCurrencyOptions.rates[referenceCurrency].name}</option>)\n        }\n    }\n        \n\n\n    let submitHandler = (e)=>{\n        e.preventDefault();\n            if(criptoCoin===\"\"||targetCurrency===\"\"||days<=0){\n                storeFormError(true);\n            }else{\n                storeMakingChart(true);\n                document.getElementsByClassName(\"container-fluid\")[0].classList.add(\"media-width\");\n            }\n    }\n\n    useEffect(()=>{\n        if(formError){\n            storeFormError(false);\n            storeErrorMessage(<div className=\"alert alert-danger error-message\"><span>Please input valid values in the form fields to continue.</span></div>)\n            setTimeout(() => {\n              storeErrorMessage(<div className=\"error-message\"></div>);\n            }, 3000);\n        }\n    });\n    \n    return(\n        <div className=\"form-box justify-content-center flex-column\">\n            <form id=\"form\" className=\"col-xs-12 col-lg-9\" onSubmit={submitHandler}>\n                <div className=\"form-group\">\n                    <label>Cryptocurrency</label>\n                    <select \n                        value={criptoCoin} \n                        onChange={(e)=>{e.preventDefault();storeCriptoCoin(e.target.value);}}\n                        className=\"form-control\">\n                        {criptoCoinMenu}\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Target Currency</label>\n                    <select \n                        value={targetCurrency} \n                        onChange={(e)=>{e.preventDefault();storeTargetCurrency(e.target.value)}}\n                        className=\"form-control\">\n                        {targetCurrencyMenu}\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Days until today</label>\n                    <input\n                        type=\"number\"\n                        onBlur={e => storeDays(e.target.value)}\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"submit\"\n                        value=\"Create Chart\"\n                        className=\"btn btn-inverse btn-success\"\n                    />\n                </div>\n                {errorMessage}\n            </form>\n        </div>\n    );\n}\n\nexport default Form;","import React from \"react\";\n\nconst Header = ()=>{\n    return(\n        <h1 id=\"header\" className=\"text-center\">Consult a Criptocoin's Evolution<br/>Within the Last 30 Days</h1>\n    )\n}\n\nexport default Header;","import React, { Fragment, useState, useEffect  } from 'react';\nimport Graphic from './components/Graphic';\nimport Error from './components/Error';\nimport Text from './components/Text';\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nimport Form from './components/Form';\nimport Header from './components/Header';\nimport { makeAPIQuery, getQueryJSON } from './helpers';\n\nam4core.useTheme(am4themes_animated);\n\n\n \nfunction App(){\n  \n  const [criptoCoin, storeCriptoCoin] = useState(\"\");\n  let [targetCurrency, storeTargetCurrency] = useState(\"\");\n  const [days, storeDays] = useState(0);\n  let [makingChart, storeMakingChart] = useState(false);\n  const [readyQuery,storeReadyQuery] = useState(false);\n  const [dataQuery,storeDataQuery] = useState(null);\n  let [criptoCoinOptions,storeCriptoCoinOptions] = useState(null);\n  let [targetCurrencyOptions,storeTargetCurrencyOptions] = useState(null);\n  let [criptoCoinTitle,storeCriptoCoinTitle] = useState(\"\");\n  let [targetCurrencyTitle,storeTargetCurrencyTitle] = useState(\"\");\n  let [formError, storeFormError] = useState(false);\n  let [errorMessage, storeErrorMessage] = useState (<div className=\"error-message\"></div>)\n  \n  document.title = \"Crypto Coins Value Evolution Chart\";\n\n  let component;\n  let komponentt;\n  useEffect(()=>{\n    if(makingChart===true){\n      storeMakingChart(false);\n      storeDataQuery(null);\n      const resObj = makeAPIQuery(criptoCoin,targetCurrency,days)\n      .then((res)=> {return res.json()})\n      .then((data)=>{\n        storeDays(0);\n        if(data.prices.length<1){\n          storeDataQuery(false);\n        }else{\n          for(let criptoName in criptoCoinOptions){\n            if(criptoCoinOptions[criptoName]===criptoCoin){\n              storeCriptoCoinTitle(criptoName);\n              break;\n            }\n          }\n  \n          for(let targetCoin in targetCurrencyOptions.rates){\n            if(targetCoin===targetCurrency){\n              storeTargetCurrencyTitle(targetCurrencyOptions.rates[targetCoin].name);\n              break;\n            }\n          }\n          storeCriptoCoin(\"\");\n          storeTargetCurrency(\"\");\n          window.scrollTo(0,168);\n          storeDataQuery(data);\n        }\n      });\n    }\n  })\n\n  useEffect(()=>{\n    if(criptoCoinOptions===null){\n      fetch(\"https://api.coingecko.com/api/v3/coins/list\")\n      .then((res)=>{\n        return res.json()\n      })\n      .then((data)=>{\n        data = data.filter((item)=>item.name!==\"\"&& item.id!==\"\");\n        let dataObject = {};\n        for(let i = 0; i<=data.length-1;++i){\n          let item = data[i];\n          dataObject[item.name] = item.id;\n        }\n        storeCriptoCoinOptions(dataObject)});\n    }\n  });\n\n  useEffect(()=>{\n    if(targetCurrencyOptions===null){\n      fetch(\"https://api.coingecko.com/api/v3/exchange_rates\")\n      .then((res)=>{\n        return res.json()})\n      .then((data)=>{storeTargetCurrencyOptions(data)});\n    }\n  });\n\n  if(dataQuery===null){\n    komponentt = \n    <div>\n      <div className=\"text-container\">\n          <Text/>\n        </div>\n          <Form\n            criptoCoin={criptoCoin}\n            storeCriptoCoin={storeCriptoCoin}\n            targetCurrency={targetCurrency}\n            storeTargetCurrency={storeTargetCurrency}\n            days={days}\n            storeDays={storeDays}\n            makingChart={makingChart}\n            storeMakingChart={storeMakingChart}\n            criptoCoinOptions = {criptoCoinOptions}\n            targetCurrencyOptions = {targetCurrencyOptions}\n            criptoCoinTitle = {criptoCoinTitle}\n            storeCriptoCoinTitle = {storeCriptoCoinTitle}\n            targetCurrencyTitle = {targetCurrencyTitle}\n            storeTargetCurrencyTitle = {storeTargetCurrencyTitle}\n            formError = {formError}\n            storeFormError = {storeFormError}\n            errorMessage = {errorMessage}\n            storeErrorMessage = {storeErrorMessage}\n          />\n      </div>\n  }\n\n  if(dataQuery===false){\n    komponentt = null;\n    component = <Error/>\n  }\n\n  if(dataQuery!==null&&dataQuery!==false){\n    komponentt = null;\n    component = <Graphic\n      storeDataQuery = {storeDataQuery}\n        dataQuery = {dataQuery}\n        criptoCoin = {criptoCoin}\n        targetCurrency = {targetCurrency}\n        criptoCoinOptions = {criptoCoinOptions}\n        storeCriptoCoinOptions = {storeCriptoCoinOptions}\n        targetCurrencyOptions = {targetCurrencyOptions}\n        storeTargetCurrencyOptions = {storeTargetCurrencyOptions}\n        criptoCoinTitle = {criptoCoinTitle}\n        storeCriptoCoinTitle = {storeCriptoCoinTitle}\n        targetCurrencyTitle = {targetCurrencyTitle}\n        storeTargetCurrencyTitle = {storeTargetCurrencyTitle}  \n        storeDataQuery = {storeDataQuery}\n    />;\n  }\n  \n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"jumbotron header\">\n        <Header/>\n      </div>\n      {komponentt}\n      \n      <div>\n        {component}\n      </div>\n    </div>\n    );\n  }\n\nexport default App;","export function makeAPIQuery(criptoCoin,targetCurrency,days){\n    let url = `https://api.coingecko.com/api/v3/coins/${criptoCoin}/market_chart?vs_currency=${targetCurrency}&days=${days}`\n    return fetch(url)\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}